name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          openjdk-17-jdk \
          git \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          python3-setuptools
          
    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-global-
          
    - name: Cache Buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Build APK with Buildozer
      run: |
        # Configurar variables de entorno
        export BUILDOZER_LOG_LEVEL=2
        export GRADLE_OPTS="-Xmx4096m -Dorg.gradle.daemon=false"
        
        # Inicializar buildozer (solo si no existe)
        if [ ! -f .buildozer/state.db ]; then
          buildozer init
        fi
        
        # Construir APK
        buildozer android debug
        
    - name: List generated files
      run: |
        echo "=== Contenido del directorio bin/ ==="
        ls -la bin/ || echo "Directorio bin/ no encontrado"
        echo "=== Buscando archivos APK ==="
        find . -name "*.apk" -type f
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: spectrum-simulator-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/
          *.log
        retention-days: 7

  # Job adicional para crear release automático (opcional)
  create-release:
    needs: build-apk
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: spectrum-simulator-apk
        path: ./apk
        
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.date.outputs.date }}
        name: Spectrum Simulator APK v${{ steps.date.outputs.date }}
        body: |
          🚀 **Simulador de Espectro APK**
          
          Construcción automática del APK para Android.
          
          📱 **Instalación:**
          1. Descarga el archivo APK
          2. Habilita "Fuentes desconocidas" en Android
          3. Instala el APK
          
          📊 **Características:**
          - Simulador de espectro interactivo
          - 3 señales configurables
          - Gráficos en tiempo real
          - Compatible con Android 5.0+
          
          🔧 **Construido con:** Python, Kivy, Matplotlib, NumPy
        files: ./apk/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
